CREATE DATABASE SESDB;
GO
USE SESDB;

CREATE TABLE UserEntry
(
	Id BIGINT CONSTRAINT PK_User_Id PRIMARY KEY NOT NULL,
	[Password] NVARCHAR(512) NOT NULL,
	Salt NVARCHAR(512) NOT NULL,
	IsDeleted BIT NOT NULL,
);
CREATE TABLE Token
(
	Token NVARCHAR(258) PRIMARY KEY NOT NULL,
	UserId BIGINT NOT NULL,
	ValidTo DATETIME NOT NULL,
	IsDeleted BIT NOT NULL,
);
CREATE INDEX IX_Token_UserId ON Token(UserId) WHERE IsDeleted = 0;
CREATE INDEX IX_Token_ValidTo ON Token(ValidTo) WHERE IsDeleted = 0;

CREATE DATABASE SSSDB;
GO
USE SSSDB;

CREATE TABLE [User]
(
	Id BIGINT CONSTRAINT PK_User_Id PRIMARY KEY IDENTITY(0, 1) NOT NULL,
	WasOnline DATETIME NOT NULL DEFAULT GETUTCDATE(),
	[Name] NVARCHAR(100) NOT NULL,
	MonthsBeforeDelete INT NOT NULL DEFAULT(6),
	SearchMe BIT NOT NULL DEFAULT(1),
	ShowMe BIT NOT NULL DEFAULT(1),
	ForwardMessage BIT NOT NULL DEFAULT(1),
	InviteMe BIT NOT NULL DEFAULT(1),
	IsDeleted BIT NOT NULL DEFAULT 0,
	IsOnline BIT NOT NULL DEFAULT(0),
);

CREATE TABLE Chat
(
    Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
    ChatType NVARCHAR(20) NOT NULL CHECK (ChatType IN ('Private', 'Group', 'Channel')),
    CreatedAt DATETIME NOT NULL DEFAULT GETUTCDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0,
);
GO

CREATE TABLE PrivateChat
(
    ChatId UNIQUEIDENTIFIER PRIMARY KEY FOREIGN KEY REFERENCES Chat(Id) NOT NULL,
    User1Id BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
    User2Id BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
	IsMuttedUser1 BIT NOT NULL DEFAULT 0,
	IsMuttedUser2 BIT NOT NULL DEFAULT 0,
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
    CHECK (User1Id != User2Id),
);

CREATE TABLE GroupChat
(
    ChatId UNIQUEIDENTIFIER PRIMARY KEY FOREIGN KEY REFERENCES Chat(Id) NOT NULL,
    OwnerId BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
    GroupName NVARCHAR(100) NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
);

CREATE TABLE Channel
(
    ChatId UNIQUEIDENTIFIER PRIMARY KEY FOREIGN KEY REFERENCES Chat(Id),
	OwnerId BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
    ChannelName NVARCHAR(100) NOT NULL,
    IsPublic BIT DEFAULT 1 NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
);
GO
CREATE TABLE UniqueName
(
	Id BIGINT PRIMARY KEY IDENTITY,
	UniqueName NVARCHAR(100) UNIQUE,
	UserId BIGINT FOREIGN KEY REFERENCES [User](Id),
	ChatId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Chat(ChatId),
	IsActive BIT NOT NULL DEFAULT 1,
	IsDeleted Bit NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
	CHECK(UserId IS NOT NULL AND ChatId IS NULL OR UserId IS NULL AND ChatId IS NOT NULL OR UserId IS NULL AND ChatId IS NULL)
);
CREATE INDEX IX_UniqueName_UserId ON UniqueName(UserId) WHERE UserId IS NOT NULL AND IsDeleted = 0;
CREATE INDEX IX_UniqueName_UniqueName ON UniqueName(UniqueName) WHERE UniqueName IS NOT NULL;
CREATE INDEX IX_UniqueName_ChatId ON UniqueName(ChatId) WHERE ChatId IS NOT NULL AND IsDeleted = 0;

CREATE TABLE ChatUser
(
    ChatId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Chat(Id) NOT NULL,
    UserId BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
	IsMutted BIT NOT NULL DEFAULT(0),
    [Role] NVARCHAR(20) CHECK (Role IN ('member', 'admin', 'onlyread', 'owner')) NOT NULL DEFAULT 'member',
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
    PRIMARY KEY (ChatId, UserId),
);
CREATE INDEX IX_ChatUser_UserChat ON ChatUser(UserId, ChatId) WHERE IsDeleted = 0;
CREATE INDEX IX_ChatUser_UserId ON ChatUser(UserId) WHERE IsDeleted = 0;
CREATE INDEX IX_ChatUser_ChatId ON ChatUser(ChatId) WHERE IsDeleted = 0;

CREATE TABLE StickerPack
(
	Id BIGINT PRIMARY KEY IDENTITY NOT NULL,
	AuthorId BIGINT FOREIGN KEY REFERENCES [User](Id) NOT NULL,
	Title NVARCHAR(100) NOT NULL,
	PreviewPath NVARCHAR(MAX),
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0,
);
GO

CREATE TABLE Sticker
(
	Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
	StickerPackId BIGINT FOREIGN KEY REFERENCES StickerPack(Id) NOT NULL,
	FilePath NVARCHAR(MAX),
	Title NVARCHAR(50) NOT NULL,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0,
);

CREATE TABLE Avatar
(
	Id UNIQUEIDENTIFIER  PRIMARY KEY NOT NULL,
	UserId BIGINT FOREIGN KEY REFERENCES [User](Id),
	ChatId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Chat(Id),
	FilePath NVARCHAR(MAX), --path in minIO
	IsActive BIT NOT NULL DEFAULT 1,
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
	CreatedTime DateTime NOT NULL DEFAULT GETUTCDATE(),
	CHECK((UserId IS NOT NULL AND ChatId IS NULL) OR (UserId IS NULL AND ChatId IS NOT NULL))
);

CREATE DATABASE SMSDB;
GO
USE SMSDB;

CREATE TABLE [Message]
(
    Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0,
    ChatId UNIQUEIDENTIFIER NOT NULL,
    AuthorId BIGINT NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    SentAt DATETIME NOT NULL DEFAULT GETUTCDATE(),
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
);
GO
CREATE INDEX IX_Message_LastMessages ON Message(ChatId, SentAt) INCLUDE (Content);
CREATE INDEX IX_Message_ChatId ON Message(ChatId);
CREATE INDEX IX_Message_AuthorId ON Message(AuthorId);
CREATE INDEX IX_Message_SentAt ON Message(SentAt);

CREATE TABLE Attachment
(
	Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
	MessageId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [Message](Id) NOT NULL,
	FilePath NVARCHAR(MAX), --path in minIO
	IsDeleted BIT NOT NULL DEFAULT 0,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
);

CREATE TABLE ViewMessage
(
	Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
	MessageId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [Message](Id) NOT NULL,
	UserId BIGINT NOT NULL,
	ViewTime DATETIME NOT NULL DEFAULT GETUTCDATE(),
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0,
);
CREATE INDEX IX_ViewMessage_MessageId ON ViewMessage(MessageId);
CREATE INDEX IX_ViewMessage_UserId ON ViewMessage(UserId);

CREATE DATABASE SFSDB;
GO
USE SFSDB;
CREATE TABLE FileObject
(
	Id UNIQUEIDENTIFIER PRIMARY KEY NOT NULL,
	FileType NVARCHAR(50),
	IsDeleted BIT NOT NULL DEFAULT 0,
	FilePath NVARCHAR(1000) NOT NULL,
	LastModified DATETIME NOT NULL DEFAULT GETUTCDATE(),
);
CREATE INDEX IX_FileObject_FileType ON FileObject(FileType) WHERE FileType IS NOT NULL AND IsDeleted = 0;